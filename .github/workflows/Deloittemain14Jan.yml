name: CI/CD Pipeline for ASP.NET Web App

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to main

jobs:
  # Continuous Integration Job
  build-and-test:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup MSBuild path
      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.0.2

      # Step 3: Setup NuGet
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      # Step 4: Restore NuGet packages
      - name: Restore NuGet packages
        run: nuget restore Deloittee360.sln

      # Step 5: Build the solution
      - name: Build the solution
        run: msbuild Deloittee360.sln /nologo /verbosity:m /p:Configuration=Release

      # Step 6: Run Unit Tests
      - name: Run Unit Tests
        run: |
          vstest.console.exe **\*.Test.dll --logger:trx
        continue-on-error: false

      # Step: Await manual approval
      - name: Await Deployment Approval
        uses: hmarr/auto-approve-action@v2
        with:
          approve: true  

  # Continuous Deployment Job
  deploy:
    needs: build-and-test  # Runs only if CI job succeeds
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup MSBuild path
      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.0.2

      # Step 3: Publish to folder
      - name: Publish to Folder
        run: |
          msbuild Deloittee360.sln /nologo /verbosity:m /t:Build;pipelinePreDeployCopyAllFilesToOneFolder /p:_PackageTempDir="published" /p:Configuration=Release

      # Step 4: Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      # Step 5: Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'WA-DEL01-DELOITTE360-PROD'  # Replace with your Azure Web App name
          slot-name: 'Production'                # Replace with the slot name if needed
          package: published/
